import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

const priorityCities = [
  "Весь Израиль", "Центр страны", "Юг страны", "Север страны"
];

const otherCities = [
  "Акко", "Азур", "Арад", "Ариэль", "Аррабе", "Афула", "Ашдод", "Ашкелон", "Бака эль Гарбия", "Бат Ям",
  "Бейт Шеан", "Бейт Шемеш", "Бейтар Илит", "Беэр Шева", "Беэр Яаков", "Бней Брак", "Бней Аиш",
  "Ганей Тиква", "Герцлия", "Гиватаим", "Гиват Шмуэль", "Димона", "Иерусалим", "Йехуд Моноссон",
  "Йокнеам", "Калансуа", "Кармиэль", "Кафр Кара", "Кафр Касем", "Кирьят Ата", "Кирьят Бялик",
  "Кирьят Хаим", "Кирьят Гат", "Кирьят Малахи", "Кирьят Моцкин", "Кирьят Оно", "Кармиель", "Кирьят Шмона",
  "Кирьят Ям", "Кфар Саба", "Кфар Йона", "Лод", "Маале Адумим", "Маалот Таршиха", "Магар", "Модиин",
  "Мигдаль ха Эмек", "Модиин Илит", "Маалот", "Модиин Маккабим Реут", "Нагария", "Назарет", "Ноф ха Галиль",
  "Нес Циона", "Натания", "Нетивот", "Наария", "Нацрат Илит", "Нешер", "Ор Акива", "Ор Йехуда", "Офаким", "Петах Тиква",
  "Раанана", "Рамат Ган", "Рамла", "Рахат", "Реховот", "Ришон ле Цион",
  "Рош Аин", "Сахнин", "Сдерот", "Тайбе", "Тамра", "Тверия", "Тель Авив", "Тира", "Тират Кармель",
  "Умм-эль Фахм", "Хадера", "Хайфа", "Хедера", "Ход Ха Шарон", "Хариш", "Ход ха Шарон", "Холон", "Цфат", "Цомет Канот",
  "Шефарам", "Эйлат", "Эльад", "Явне", "Рамат Ха Шарон", "Кфар Авив", "Кирьят Бял", "Кейсария"
];

async function main() {
  console.log("🗑 Удаляем все вакансии...");
  await prisma.job.deleteMany({});
  console.log("✅ Все вакансии удалены!");

  console.log("🗑 Удаляем всех фейковых пользователей...");
  await prisma.user.deleteMany({
    where: { clerkUserId: { startsWith: "user_" } }
  });
  console.log("✅ Все фейковые пользователи удалены!");

  console.log("🗑 Удаляем все города...");
  await prisma.city.deleteMany({});
  console.log("✅ Все города удалены!");

  console.log("🗑 Удаляем всех соискателей...");
  await prisma.seeker.deleteMany({});
  console.log("✅ Все соискатели удалены!");
  
  console.log("📌 Добавляем приоритетные города...");
  await prisma.city.createMany({
    data: priorityCities.map(name => ({ name })),
  });

  console.log("📌 Добавляем остальные города...");
  await prisma.city.createMany({
    data: otherCities.map(name => ({ name })),
  });

  console.log("✅ Все города успешно добавлены!");

  const categories = [
    'Стройка',
    'Уборка',
    'Доставка',
    'Офис',
    'Ремонт',
    'Образование',
    'Медицина',
    'Склад',
    'Производство',
    'Другое'
  ];
  await prisma.category.deleteMany({});
  await prisma.category.createMany({
    data: categories.map(name => ({ name })),
  });

  // Добавляем тестовых соискателей
  const testSeekers = [
    {
      name: "Илона",
      contact: "050-123-45-67, facebook.com/ilona",
      city: "Ашдод",
      description: "няни\nמחפשת לעבוד כמטפלת",
    },
    {
      name: "Софья",
      contact: "050-234-56-78",
      city: "Нагария",
      description: "разное уборка уход-за-пожилыми\nИщу подработку - уборка, няня и так далее.",
    },
    {
      name: "Виктория",
      contact: "050-345-67-89",
      city: "*Центр",
      description: "уход-за-пожилыми\nИщу работу 24/7",
    },
    {
      name: "Константин",
      contact: "050-456-78-90",
      city: "Хайфа",
      description: "транспорт\nИщу работу водителем, права 12 тонн",
    },
  ];

  console.log("📌 Добавляем тестовых соискателей...");
  function generateSlug(name, description) {
    // Простой slug: имя + первая строка описания, латиницей, в нижнем регистре, без пробелов
    return (
      (name + '-' + description.split('\n')[0])
        .toLowerCase()
        .replace(/[^a-zа-я0-9]+/gi, '-')
        .replace(/^-+|-+$/g, '')
    );
  }
  for (const seeker of testSeekers) {
    await prisma.seeker.create({ data: { ...seeker, slug: generateSlug(seeker.name, seeker.description) } });
  }
  console.log("✅ Тестовые соискатели добавлены!");
}

main()
  .catch((e) => {
    console.error("❌ Ошибка при выполнении скрипта:", e);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
