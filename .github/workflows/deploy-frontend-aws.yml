name: Deploy Frontend to AWS S3

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend for production
        run: |
          VITE_API_URL=https://api.worknow.co.il \
          VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }} \
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }} \
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Navigate to client directory
        run: cd apps/client

      - name: Deploy to AWS S3
        run: |
          cd apps/client
          aws s3 sync dist/ s3://worknow-frontend --delete

      - name: Notify deployment success
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "ðŸš€ Frontend deployed to AWS S3 successfully!"

  rollback:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    if: failure()
    environment: production
    steps:
      - name: Rollback frontend
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Restore previous version from S3
        run: |
          # This would require storing previous versions in S3
          # For now, we'll just notify about the failure
          echo "Frontend deployment failed - manual rollback required"
