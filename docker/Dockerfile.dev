# Development Dockerfile for WorkNow
# Optimized for development with hot reloading

FROM node:20-alpine

# Install necessary packages for development
RUN apk add --no-cache \
    dumb-init \
    git \
    openssh-client \
    && rm -rf /var/cache/apk/*

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S worknow -u 1001

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY apps/client/package*.json ./apps/client/
COPY apps/api/package*.json ./apps/api/

# Copy Prisma schema for postinstall script
COPY prisma/ ./prisma/

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy remaining source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Create necessary directories and set permissions
RUN mkdir -p /app/dist && \
    chown -R worknow:nodejs /app

# Switch to non-root user
USER worknow

# Expose ports for frontend and backend
EXPOSE 3000 3001

# Health check for development
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start development server with hot reloading
CMD ["npm", "run", "dev"] 