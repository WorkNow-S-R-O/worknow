# Docker Compose Development Configuration

services:
  # Redis for Development
  redis-dev:
    image: redis:7-alpine
    container_name: worknow-redis-dev
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: redis_dev_password
    command: redis-server --appendonly yes --requirepass redis_dev_password
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - worknow-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WorkNow Development Application
  worknow-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: worknow-app-dev
    restart: unless-stopped
    env_file:
      - ../.env  # Load environment variables from root .env file
    environment:
      # Database - Using local PostgreSQL
      DATABASE_URL: postgresql://postgres@host.docker.internal:5432/worknow
      
      # Node environment
      NODE_ENV: development
      PORT: 3001
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_dev_password}@redis-dev:6379
      
      # Development specific
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
      DOCKER_BUILD: true
    ports:
      - "3000:3000"  # Frontend
      - "3001:3001"  # Backend
    volumes:
      - ../:/app
      - /app/node_modules
      - /app/apps/client/node_modules
      - /app/apps/api/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      redis-dev:
        condition: service_healthy
    networks:
      - worknow-dev-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prisma Studio for Database Management
  prisma-studio:
    image: node:20-alpine
    container_name: worknow-prisma-studio
    working_dir: /app
    command: >
      sh -c "npm install -g prisma &&
             prisma studio --hostname 0.0.0.0 --port 5555"
    environment:
      DATABASE_URL: postgresql://postgres@host.docker.internal:5432/worknow
    ports:
      - "5555:5555"
    volumes:
      - ../prisma:/app/prisma
    networks:
      - worknow-dev-network

volumes:
  redis_dev_data:
    driver: local

networks:
  worknow-dev-network:
    driver: bridge 