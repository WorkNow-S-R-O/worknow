import AIJobTitleService from '../services/aiJobTitleService.js';

/**
 * Test script to verify rate limit handling
 * This script will test the AI job title generation with proper rate limit handling
 */

async function testRateLimitHandling() {
    console.log("üß™ Testing rate limit handling for AI job title generation...\n");

    const testDescriptions = [
        "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤–∞—Ä –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω. –†–∞–±–æ—Ç–∞ —Å 8:00 –¥–æ 16:00. –ó–∞—Ä–ø–ª–∞—Ç–∞ 45 —à–µ–∫/—á–∞—Å. –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.",
        "–ù—É–∂–µ–Ω —É–±–æ—Ä—â–∏–∫ –≤ –æ—Ñ–∏—Å. –†–∞–±–æ—Ç–∞ 5 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é. –ó–∞—Ä–ø–ª–∞—Ç–∞ 40 —à–µ–∫/—á–∞—Å.",
        "–ò—â–µ–º –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ –≤ –∫–∞—Ñ–µ. –†–∞–±–æ—Ç–∞ –≤ —Å–º–µ–Ω—ã. –ó–∞—Ä–ø–ª–∞—Ç–∞ 50 —à–µ–∫/—á–∞—Å + —á–∞–µ–≤—ã–µ.",
        "–¢—Ä–µ–±—É–µ—Ç—Å—è –≥—Ä—É–∑—á–∏–∫ –Ω–∞ —Å–∫–ª–∞–¥. –†–∞–±–æ—Ç–∞ —Å 7:00 –¥–æ 15:00. –ó–∞—Ä–ø–ª–∞—Ç–∞ 45 —à–µ–∫/—á–∞—Å.",
        "–ù—É–∂–µ–Ω –≤–æ–¥–∏—Ç–µ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B. –î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≥–æ—Ä–æ–¥—É. –ó–∞—Ä–ø–ª–∞—Ç–∞ 55 —à–µ–∫/—á–∞—Å."
    ];

    console.log(`üìù Testing ${testDescriptions.length} job descriptions...\n`);

    for (let i = 0; i < testDescriptions.length; i++) {
        const description = testDescriptions[i];
        
        console.log(`üîç Test ${i + 1}/${testDescriptions.length}:`);
        console.log(`   Description: ${description.substring(0, 50)}...`);
        
        try {
            const startTime = Date.now();
            const result = await AIJobTitleService.generateAITitle(description);
            const endTime = Date.now();
            
            console.log(`   ‚úÖ Success: "${result.title}"`);
            console.log(`   üìä Method: ${result.method}`);
            console.log(`   üéØ Confidence: ${result.confidence.toFixed(2)}`);
            console.log(`   ‚è±Ô∏è  Time: ${endTime - startTime}ms`);
            
        } catch (error) {
            console.log(`   ‚ùå Error: ${error.message}`);
        }
        
        console.log(""); // Empty line for readability
        
        // Add delay between tests
        if (i < testDescriptions.length - 1) {
            console.log("   ‚è≥ Waiting 2 seconds before next test...");
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
    }

    console.log("‚úÖ Rate limit handling test completed!");
}

// Run the test
testRateLimitHandling().catch(console.error); 