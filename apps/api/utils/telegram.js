/* eslint-disable no-undef */
import fetch from 'node-fetch';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const TELEGRAM_MAX_LENGTH = 4000; // –£—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∞—Å –¥–ª—è Markdown-—Ä–∞–∑–º–µ—Ç–∫–∏

/**
 * –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ Telegram
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} jobs - –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const sendTelegramNotification = async (user, jobs) => {
  try {
    const messages = generateMessages(user, jobs, "üî• *–ù–æ–≤—ã–π –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!* üî•");
    await sendTelegramMessages(messages);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏/—É–¥–∞–ª–µ–Ω–∏–∏
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} jobs - –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const sendUpdatedJobListToTelegram = async (user, jobs) => {
  try {
    const messages = generateMessages(user, jobs, "‚ö° *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!* ‚ö°");

    if (jobs.length === 0) {
      // üî¥ –£–≤–µ–¥–æ–º–ª—è–µ–º, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π
      messages.push(`‚ö†Ô∏è *–ü—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –∏–º–µ–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏!* ‚ö†Ô∏è\n\n` +
                    `üë§ *–ò–º—è:* ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.lastName || ''}\n` +
                    `üìß *Email:* ${user.email}\n` +
                    `‚ùå –í—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —É–¥–∞–ª–µ–Ω—ã.`);
    }

    await sendTelegramMessages(messages);
  } catch (error) {
    console.error(`‚ùå [Telegram] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:`, error);
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} job - –°–æ–∑–¥–∞–Ω–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è
 */
export const sendNewJobNotificationToTelegram = async (user, job) => {
  try {
    console.log("üì¢ –í—ã–∑–æ–≤ sendNewJobNotificationToTelegram –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏:", job);
    
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.error("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.");
      return;
    }

    const message = `üÜï *–ù–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è –æ—Ç –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!* üÜï\n\n` +
                    `üë§ *–ò–º—è:* ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.lastName || ''}\n` +
                    `üìß *Email:* ${user.email}\n` +
                    `‚öíÔ∏è *–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${job.category || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
                    `üíé *–°—Ç–∞—Ç—É—Å:* –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n` +
                    `üìå *–í–∞–∫–∞–Ω—Å–∏—è:*\n` +
                    `üîπ *${job.title}* \n` +
                    `üìç *–ì–æ—Ä–æ–¥:* ${job.city?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                    `üí∞ *–ó–∞—Ä–ø–ª–∞—Ç–∞:* ${job.salary}\n` +
                    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${job.phone}\n` +
                    `üìÖ *–î–∞—Ç–∞:* ${new Date(job.createdAt).toLocaleDateString()}\n` +
                    `üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* ${job.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n` +
                    `---`;
                    

    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:\n${message}`);

    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            chat_id: TELEGRAM_CHAT_ID,
            text: message,
            parse_mode: 'Markdown',
        }),
    });

    const data = await response.json();
    console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram API:", data);

    if (!data.ok) {
        console.error("‚ùå –û—à–∏–±–∫–∞ Telegram:", data.description);
    } else {
        console.log(`‚úÖ [Telegram] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
    }

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:`, error);
  }
};



/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} jobs - –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} header - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @returns {Array} messages - –†–∞–∑–±–∏—Ç—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
const generateMessages = (user, jobs, header) => {
  let messages = [];
  let currentMessage = `${header}\n\n` +
                       `üë§ *–ò–º—è:* ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.lastName || ''}\n` +
                       `üìß *Email:* ${user.email}\n` +
                       `üíé *–°—Ç–∞—Ç—É—Å:* –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n` +
                       `üìå *–í–∞–∫–∞–Ω—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*`;

  if (jobs.length === 0) {
    currentMessage += `\n‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π.`;
    messages.push(currentMessage);
  } else {
    jobs.forEach((job, index) => {
      let jobMessage = `\n\nüîπ *${index + 1}. ${job.title}* \n` +
                       `‚öíÔ∏è *–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${job.category?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
                       `üìç *–ì–æ—Ä–æ–¥:* ${job.city?.name || job.city || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                       `üí∞ *–ó–∞—Ä–ø–ª–∞—Ç–∞:* ${job.salary}\n` +
                       `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${job.phone}\n` +
                       `üìÖ *–î–∞—Ç–∞:* ${new Date(job.createdAt).toLocaleDateString()}\n` +
                       `üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* ${job.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n` +
                       `---`;

      if (currentMessage.length + jobMessage.length > TELEGRAM_MAX_LENGTH) {
        messages.push(currentMessage);
        currentMessage = ''; // –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫
      }

      currentMessage += jobMessage;
    });

    if (currentMessage.length > 0) {
      messages.push(currentMessage);
    }
  }

  return messages;
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
 * @param {Array} messages - –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
const sendTelegramMessages = async (messages) => {
  for (const msg of messages) {
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:\n${msg}`);

    try {
      const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: msg,
          parse_mode: 'Markdown',
        }),
      });

      const data = await response.json();
      console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram API:", data);

      if (!data.ok) {
        console.error("‚ùå –û—à–∏–±–∫–∞ Telegram:", data.description);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    }
  }
};